# Generated by Django 5.1.9 on 2025-07-18 14:32

import django.db.models.deletion
import wagtail.contrib.forms.models
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0058_newspage'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='PeptideLinksIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro_text', wagtail.fields.RichTextField(default='\n        <p>This site provides a directory of principal investigators in peptide science at academic institutions, \n        government laboratories, and companies who have research-oriented web pages. It serves the peptide science \n        community by connecting researchers across institutions and facilitating collaboration.</p>\n        \n        <p>The field of peptides is interdisciplinary, spanning chemistry, biochemistry, molecular biology, medicine, \n        pharmaceutical sciences, materials science, and engineering. While we cannot include every researcher who \n        uses peptides, we aim to provide a comprehensive directory of active peptide scientists.</p>\n        ')),
                ('submission_instructions', wagtail.fields.RichTextField(default='\n        <p>If you are a peptide scientist and principal investigator with a web page at your institution, \n        you may submit your information for inclusion in this directory. Please provide your name, \n        institution, research focus, and website URL.</p>\n        ')),
            ],
            options={
                'verbose_name': 'PeptideLinks Directory',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ResearchArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResearcherSubmissionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('intro', wagtail.fields.RichTextField(default='\n        <p>Use this form to submit your information for inclusion in the PeptideLinks directory. \n        All submissions are reviewed before being added to the public directory.</p>\n        ')),
                ('thank_you_text', wagtail.fields.RichTextField(default='\n        <p>Thank you for your submission! We will review your information and add you to the \n        directory once verified. You will receive a confirmation email when your listing is live.</p>\n        ')),
            ],
            options={
                'verbose_name': 'Researcher Submission Form',
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, help_text='e.g., Professor, Associate Professor', max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('department', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('state_province', models.CharField(blank=True, help_text='State (US) or Province (Canada)', max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('website_url', models.URLField(blank=True, help_text='Personal or lab website')),
                ('institutional_email', models.EmailField(blank=True, max_length=254)),
                ('orcid_id', models.CharField(blank=True, help_text='ORCID identifier (e.g., 0000-0000-0000-0000)', max_length=50)),
                ('pubmed_search_term', models.CharField(blank=True, help_text="Search term for PubMed (e.g., 'Smith J[Author]')", max_length=200)),
                ('pubmed_url', models.URLField(blank=True)),
                ('research_keywords', models.TextField(blank=True, help_text='Comma-separated keywords')),
                ('is_active', models.BooleanField(default=True, help_text='Display in public directory')),
                ('is_verified', models.BooleanField(default=False, help_text='Verified by admin')),
                ('verification_token', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_verified', models.DateTimeField(blank=True, null=True)),
                ('last_link_check', models.DateTimeField(blank=True, null=True)),
                ('website_status', models.CharField(choices=[('unknown', 'Unknown'), ('active', 'Active'), ('broken', 'Broken Link'), ('moved', 'Moved/Redirected'), ('inactive', 'Inactive')], default='unknown', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for administrators')),
                ('public_bio', models.TextField(blank=True, help_text='Optional public biography')),
                ('research_areas', models.ManyToManyField(blank=True, to='home.researcharea')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'unique_together': {('first_name', 'last_name', 'institution')},
            },
        ),
        migrations.CreateModel(
            name='ResearcherSubmissionFormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='home.researchersubmissionpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='NewsPage',
        ),
    ]
