# Generated by Django 5.1.9 on 2025-07-31 14:08

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0062_add_inline_images_to_news'),
        ('wagtailcore', '0094_alter_page_locale'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='AwardsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the awards section')),
            ],
            options={
                'verbose_name': 'Awards Index Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AwardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text="Unique identifier for the award type (e.g., 'merrifield', 'duvigneaud')", unique=True)),
                ('name', models.CharField(help_text="Full name of the award (e.g., 'R. Bruce Merrifield Award')", max_length=200)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Detailed description of the award, its history, and significance')),
                ('criteria', wagtail.fields.RichTextField(blank=True, help_text='Eligibility criteria and selection process for the award')),
                ('established_year', models.IntegerField(blank=True, help_text='Year the award was established', null=True)),
                ('frequency', models.CharField(default='Annual', help_text='How often the award is given (e.g., Annual, Biennial)', max_length=50)),
                ('display_order', models.IntegerField(default=0, help_text='Order in which awards appear on the awards page (lower numbers first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this award is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Award Type',
                'verbose_name_plural': 'Award Types',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AwardTypePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('nomination_info', wagtail.fields.RichTextField(blank=True, help_text='Information about how to nominate candidates for this award')),
                ('award_type', models.OneToOneField(help_text='The award type this page represents', on_delete=django.db.models.deletion.PROTECT, related_name='award_page', to='home.awardtype')),
                ('hero_image', models.ForeignKey(blank=True, help_text='Hero image for the award page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Award Type Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AwardRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Year the award was received')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('institution', models.CharField(blank=True, help_text='Institution at the time of receiving the award', max_length=255)),
                ('biography', wagtail.fields.RichTextField(blank=True, help_text='Full biography and achievements of the recipient')),
                ('photo_url', models.URLField(blank=True, help_text='External URL for recipient photo (used during import)', max_length=500)),
                ('slug', models.SlugField(help_text='URL-friendly version of recipient name', max_length=255, unique=True)),
                ('import_id', models.CharField(blank=True, db_index=True, help_text='Original ID from import source', max_length=50)),
                ('imported_from', models.CharField(blank=True, help_text="Source of the import (e.g., 'wordpress')", max_length=50)),
                ('import_date', models.DateTimeField(blank=True, help_text='Date when this record was imported', null=True)),
                ('original_url', models.URLField(blank=True, help_text='Original URL from the source website', max_length=500)),
                ('is_published', models.BooleanField(default=True, help_text='Whether this recipient should be displayed publicly')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('award_type', models.ForeignKey(help_text='The type of award received', on_delete=django.db.models.deletion.PROTECT, related_name='recipients', to='home.awardtype')),
            ],
            options={
                'verbose_name': 'Award Recipient',
                'verbose_name_plural': 'Award Recipients',
                'ordering': ['-year', 'last_name', 'first_name'],
                'unique_together': {('award_type', 'year', 'first_name', 'last_name')},
            },
        ),
    ]
