# Generated by Django 5.1.9 on 2025-08-12 16:59

import django.core.validators
import django.db.models.deletion
import wagtail.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=200)),
                ('html_content', wagtail.fields.RichTextField(blank=True)),
                ('text_content', models.TextField(blank=True, help_text='Plain text version')),
                ('available_variables', models.TextField(blank=True, default='{{first_name}}, {{last_name}}, {{email}}, {{organization}}, {{unsubscribe_link}}', help_text='Available template variables (e.g., {{first_name}}, {{organization}})')),
                ('template_type', models.CharField(choices=[('newsletter', 'Newsletter'), ('announcement', 'Announcement'), ('event', 'Event Invitation'), ('welcome', 'Welcome Email'), ('reminder', 'Reminder'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MailingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('list_type', models.CharField(choices=[('all', 'All Subscribers'), ('members', 'APS Members'), ('researchers', 'Researchers'), ('symposium', 'Symposium Attendees'), ('custom', 'Custom List')], default='custom', max_length=20)),
                ('filter_country', models.CharField(blank=True, help_text='Filter by country', max_length=100)),
                ('filter_research_area', models.CharField(blank=True, help_text='Filter by research area', max_length=100)),
                ('filter_member_type', models.CharField(blank=True, help_text='Filter by member type', max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=200)),
                ('html_content', wagtail.fields.RichTextField(blank=True)),
                ('text_content', models.TextField(blank=True)),
                ('test_emails', models.TextField(blank=True, help_text='Comma-separated list of test email addresses')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('recipients_count', models.IntegerField(default=0)),
                ('sent_count', models.IntegerField(default=0)),
                ('opened_count', models.IntegerField(default=0)),
                ('clicked_count', models.IntegerField(default=0)),
                ('unsubscribed_count', models.IntegerField(default=0)),
                ('bounced_count', models.IntegerField(default=0)),
                ('from_name', models.CharField(default='American Peptide Society', max_length=100)),
                ('from_email', models.EmailField(default='info@americanpeptidesociety.org', max_length=254)),
                ('reply_to', models.EmailField(blank=True, max_length=254)),
                ('track_opens', models.BooleanField(default=True)),
                ('track_clicks', models.BooleanField(default=True)),
                ('utm_source', models.CharField(default='email', max_length=50)),
                ('utm_medium', models.CharField(default='newsletter', max_length=50)),
                ('utm_campaign', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mailing.emailtemplate')),
                ('mailing_lists', models.ManyToManyField(blank=True, to='mailing.mailinglist')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('bounced_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('open_count', models.IntegerField(default=0)),
                ('click_count', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('tracking_id', models.CharField(blank=True, max_length=64, unique=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='mailing.campaign')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ClickTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('clicked_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('email_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='mailing.emaillog')),
            ],
            options={
                'ordering': ['-clicked_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('trigger_type', models.CharField(choices=[('subscription', 'New Subscription'), ('member_join', 'New Member'), ('event_registration', 'Event Registration'), ('birthday', 'Birthday'), ('anniversary', 'Membership Anniversary'), ('custom', 'Custom Trigger')], max_length=30)),
                ('delay_days', models.IntegerField(default=0, help_text='Days to wait after trigger')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailing.emailtemplate')),
                ('apply_to_lists', models.ManyToManyField(blank=True, to='mailing.mailinglist')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('is_member', models.BooleanField(default=False)),
                ('is_researcher', models.BooleanField(default=False)),
                ('member_id', models.CharField(blank=True, help_text='APS member ID', max_length=50)),
                ('research_areas', models.TextField(blank=True, help_text='Comma-separated research areas')),
                ('email_format', models.CharField(choices=[('html', 'HTML'), ('text', 'Plain Text')], default='html', max_length=10)),
                ('language', models.CharField(default='en', max_length=10)),
                ('confirmation_token', models.CharField(blank=True, max_length=64)),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('emails_received', models.IntegerField(default=0)),
                ('emails_opened', models.IntegerField(default=0)),
                ('emails_clicked', models.IntegerField(default=0)),
                ('last_email_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('consent_given', models.BooleanField(default=False)),
                ('consent_date', models.DateTimeField(blank=True, null=True)),
                ('lists', models.ManyToManyField(blank=True, related_name='subscribers', to='mailing.mailinglist')),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.AddField(
            model_name='emaillog',
            name='subscriber',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='mailing.subscriber'),
        ),
        migrations.AlterUniqueTogether(
            name='emaillog',
            unique_together={('campaign', 'subscriber')},
        ),
    ]
